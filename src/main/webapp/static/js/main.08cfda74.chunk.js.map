{"version":3,"sources":["logo.svg","Test.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Test","type","onClick","e","form","FormData","console","log","append","options","method","body","fetch","then","resp","json","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sIAAe,G,KAAA,IAA0B,kC,cCqC1BA,EAnCK,WA0BlB,OACE,8BACE,8BACE,uBAAOC,KAAK,SAASC,QA5B3B,SAAqBC,GACnB,IAAIC,EAAO,IAAIC,SACfC,QAAQC,IAAI,QACZH,EAAKI,OAAO,WAAY,WACxB,IAAMC,EAAU,CACdC,OAAQ,OACRC,KAAMP,GAERQ,MAAM,+BAAgCH,GACnCI,MAAK,SAAAC,GACJ,OAAOA,EAAKC,UAEbF,MAAK,SAAAC,GACJR,QAAQC,IAAIO,MAEhBR,QAAQC,IAAI,QACZH,EAAKI,OAAO,WAAY,YACxBI,MAAM,+BAAgCH,GACnCI,MAAK,SAAAC,GACJ,OAAOA,EAAKC,UAEbF,MAAK,SAAAC,GACJR,QAAQC,IAAIO,cCMLE,MA1Bf,WAEE,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,8CAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,4BASF,cAAC,EAAD,QCZSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.08cfda74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nexport const Test = () => {\r\n  function handleEvent(e: any): any {\r\n    var form = new FormData();\r\n    console.log(\"hola\");\r\n    form.append(\"username\", \"Gerardo\");\r\n    const options = {\r\n      method: 'POST',\r\n      body: form\r\n    }\r\n    fetch('http://localhost:8080/signup', options)\r\n      .then(resp => {\r\n        return resp.json();\r\n      })\r\n      .then(resp => {\r\n        console.log(resp);\r\n      });\r\n    console.log(\"hola\");\r\n    form.append(\"username\", \"Gerardo2\");\r\n    fetch('http://localhost:8080/signup', options)\r\n      .then(resp => {\r\n        return resp.json();\r\n      })\r\n      .then(resp => {\r\n        console.log(resp);\r\n      });\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type='button' onClick={handleEvent}></input>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Test from './Test';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <h3>\r\n          Buenas gente\r\n        </h3>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n      <Test></Test>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}